// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: bpconsume/jumpstartsolutions/protos/solution.proto

package gen_protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Property_Type int32

const (
	Property_STRING  Property_Type = 0
	Property_INTEGER Property_Type = 1
	Property_BOOLEAN Property_Type = 2
	Property_ARRAY   Property_Type = 3
	Property_NUMBER  Property_Type = 4
)

// Enum value maps for Property_Type.
var (
	Property_Type_name = map[int32]string{
		0: "STRING",
		1: "INTEGER",
		2: "BOOLEAN",
		3: "ARRAY",
		4: "NUMBER",
	}
	Property_Type_value = map[string]int32{
		"STRING":  0,
		"INTEGER": 1,
		"BOOLEAN": 2,
		"ARRAY":   3,
		"NUMBER":  4,
	}
)

func (x Property_Type) Enum() *Property_Type {
	p := new(Property_Type)
	*p = x
	return p
}

func (x Property_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Property_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_enumTypes[0].Descriptor()
}

func (Property_Type) Type() protoreflect.EnumType {
	return &file_bpconsume_jumpstartsolutions_protos_solution_proto_enumTypes[0]
}

func (x Property_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Property_Type.Descriptor instead.
func (Property_Type) EnumDescriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{4, 0}
}

type DeployData_DeployLocationConfig int32

const (
	DeployData_UNSPECIFIED            DeployData_DeployLocationConfig = 0
	DeployData_BIGQUERY_DATASET       DeployData_DeployLocationConfig = 1
	DeployData_BIGQUERY_DATA_TRANSFER DeployData_DeployLocationConfig = 2
	DeployData_CLOUD_BUILD            DeployData_DeployLocationConfig = 3
	DeployData_CLOUD_DEPLOY           DeployData_DeployLocationConfig = 4
	DeployData_CLOUD_FUNCTIONS_V2     DeployData_DeployLocationConfig = 5
	DeployData_CLOUD_MEMORYSTORE      DeployData_DeployLocationConfig = 6
	DeployData_CLOUD_RUN              DeployData_DeployLocationConfig = 7
	DeployData_COMPUTE                DeployData_DeployLocationConfig = 8
	DeployData_TRANSCODER_API         DeployData_DeployLocationConfig = 9
)

// Enum value maps for DeployData_DeployLocationConfig.
var (
	DeployData_DeployLocationConfig_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "BIGQUERY_DATASET",
		2: "BIGQUERY_DATA_TRANSFER",
		3: "CLOUD_BUILD",
		4: "CLOUD_DEPLOY",
		5: "CLOUD_FUNCTIONS_V2",
		6: "CLOUD_MEMORYSTORE",
		7: "CLOUD_RUN",
		8: "COMPUTE",
		9: "TRANSCODER_API",
	}
	DeployData_DeployLocationConfig_value = map[string]int32{
		"UNSPECIFIED":            0,
		"BIGQUERY_DATASET":       1,
		"BIGQUERY_DATA_TRANSFER": 2,
		"CLOUD_BUILD":            3,
		"CLOUD_DEPLOY":           4,
		"CLOUD_FUNCTIONS_V2":     5,
		"CLOUD_MEMORYSTORE":      6,
		"CLOUD_RUN":              7,
		"COMPUTE":                8,
		"TRANSCODER_API":         9,
	}
)

func (x DeployData_DeployLocationConfig) Enum() *DeployData_DeployLocationConfig {
	p := new(DeployData_DeployLocationConfig)
	*p = x
	return p
}

func (x DeployData_DeployLocationConfig) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeployData_DeployLocationConfig) Descriptor() protoreflect.EnumDescriptor {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_enumTypes[1].Descriptor()
}

func (DeployData_DeployLocationConfig) Type() protoreflect.EnumType {
	return &file_bpconsume_jumpstartsolutions_protos_solution_proto_enumTypes[1]
}

func (x DeployData_DeployLocationConfig) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeployData_DeployLocationConfig.Descriptor instead.
func (DeployData_DeployLocationConfig) EnumDescriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{9, 0}
}

type Solution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GitHub source containing the terraform configs of the solution.
	GitSource *GitSource `protobuf:"bytes,13,opt,name=git_source,json=gitSource,proto3" json:"git_source,omitempty"`
	// Estimated time to deploy this Solution.
	DeploymentEstimate *DeploymentEstimate `protobuf:"bytes,10,opt,name=deployment_estimate,json=deploymentEstimate,proto3" json:"deployment_estimate,omitempty"`
	// link to GCP pricing calculator.
	CostEstimateLink string `protobuf:"bytes,16,opt,name=cost_estimate_link,json=costEstimateLink,proto3" json:"cost_estimate_link,omitempty"`
	// Fully qualified URL for the Solution's icon image
	IconUrl string `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// Fully qualified URL for the image showing the diagram of the solution
	DiagramUrl string `protobuf:"bytes,7,opt,name=diagram_url,json=diagramUrl,proto3" json:"diagram_url,omitempty"`
	// Fully qualified URL linking to documentation for this Solution.
	DocumentationLink string `protobuf:"bytes,12,opt,name=documentation_link,json=documentationLink,proto3" json:"documentation_link,omitempty"`
	// Monthly cost estimate for the solution from the GCP pricing calculator.
	CostEstimateUsd float64 `protobuf:"fixed64,17,opt,name=cost_estimate_usd,json=costEstimateUsd,proto3" json:"cost_estimate_usd,omitempty"`
	// List of products used in this solution.
	CloudProductIdentifiers []*CloudProductIdentifier `protobuf:"bytes,15,rep,name=cloud_product_identifiers,json=cloudProductIdentifiers,proto3" json:"cloud_product_identifiers,omitempty"`
	DeployData              *DeployData               `protobuf:"bytes,14,opt,name=deploy_data,json=deployData,proto3" json:"deploy_data,omitempty"`
}

func (x *Solution) Reset() {
	*x = Solution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Solution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Solution) ProtoMessage() {}

func (x *Solution) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Solution.ProtoReflect.Descriptor instead.
func (*Solution) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{0}
}

func (x *Solution) GetGitSource() *GitSource {
	if x != nil {
		return x.GitSource
	}
	return nil
}

func (x *Solution) GetDeploymentEstimate() *DeploymentEstimate {
	if x != nil {
		return x.DeploymentEstimate
	}
	return nil
}

func (x *Solution) GetCostEstimateLink() string {
	if x != nil {
		return x.CostEstimateLink
	}
	return ""
}

func (x *Solution) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Solution) GetDiagramUrl() string {
	if x != nil {
		return x.DiagramUrl
	}
	return ""
}

func (x *Solution) GetDocumentationLink() string {
	if x != nil {
		return x.DocumentationLink
	}
	return ""
}

func (x *Solution) GetCostEstimateUsd() float64 {
	if x != nil {
		return x.CostEstimateUsd
	}
	return 0
}

func (x *Solution) GetCloudProductIdentifiers() []*CloudProductIdentifier {
	if x != nil {
		return x.CloudProductIdentifiers
	}
	return nil
}

func (x *Solution) GetDeployData() *DeployData {
	if x != nil {
		return x.DeployData
	}
	return nil
}

// A set of files in a Git repository.
type GitSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Repository URL.
	// Example: 'https://github.com/kubernetes/examples.git'
	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// Subdirectory inside the repository.
	// Example: 'staging/my-package'
	Directory string `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"`
	// Git branch or tag.
	Ref string `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GitSource) Reset() {
	*x = GitSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitSource) ProtoMessage() {}

func (x *GitSource) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitSource.ProtoReflect.Descriptor instead.
func (*GitSource) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{1}
}

func (x *GitSource) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GitSource) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *GitSource) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type DeploymentEstimate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// time to configure the solution.
	ConfigurationMinutes int32 `protobuf:"varint,1,opt,name=configuration_minutes,json=configurationMinutes,proto3" json:"configuration_minutes,omitempty"`
	// time to deploy the solution.
	DeploymentMinutes int32 `protobuf:"varint,2,opt,name=deployment_minutes,json=deploymentMinutes,proto3" json:"deployment_minutes,omitempty"`
}

func (x *DeploymentEstimate) Reset() {
	*x = DeploymentEstimate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentEstimate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEstimate) ProtoMessage() {}

func (x *DeploymentEstimate) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentEstimate.ProtoReflect.Descriptor instead.
func (*DeploymentEstimate) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{2}
}

func (x *DeploymentEstimate) GetConfigurationMinutes() int32 {
	if x != nil {
		return x.ConfigurationMinutes
	}
	return 0
}

func (x *DeploymentEstimate) GetDeploymentMinutes() int32 {
	if x != nil {
		return x.DeploymentMinutes
	}
	return 0
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of properties that belong to that section
	Properties []*Property `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{3}
}

func (x *Section) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Information pertaining to one property displayed in the Config UI.
type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name (unique) of the property.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Property type. Current supported types are: string, integer, boolean, and
	// array (defaults to string)
	Type Property_Type `protobuf:"varint,10,opt,name=type,proto3,enum=Property_Type" json:"type,omitempty"`
	// Property default value
	// Optional.
	DefaultValue string `protobuf:"bytes,12,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// Whether the property is required for the deployment or not.
	IsRequired bool   `protobuf:"varint,22,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	Validation string `protobuf:"bytes,6,opt,name=validation,proto3" json:"validation,omitempty"`
	// Validation for string type properties.
	Pattern   string `protobuf:"bytes,14,opt,name=pattern,proto3" json:"pattern,omitempty"`
	MaxLength int32  `protobuf:"varint,15,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	MinLength int32  `protobuf:"varint,16,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	// Validation for integer types.
	Maximum float32 `protobuf:"fixed32,17,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Minimum float32 `protobuf:"fixed32,18,opt,name=minimum,proto3" json:"minimum,omitempty"`
	// Validation for array values.
	MaxItems int32 `protobuf:"varint,19,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	MinItems int32 `protobuf:"varint,20,opt,name=min_items,json=minItems,proto3" json:"min_items,omitempty"`
	// Whether the property is hidden.
	IsHidden bool `protobuf:"varint,23,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{4}
}

func (x *Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property) GetType() Property_Type {
	if x != nil {
		return x.Type
	}
	return Property_STRING
}

func (x *Property) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Property) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

func (x *Property) GetValidation() string {
	if x != nil {
		return x.Validation
	}
	return ""
}

func (x *Property) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Property) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *Property) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *Property) GetMaximum() float32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *Property) GetMinimum() float32 {
	if x != nil {
		return x.Minimum
	}
	return 0
}

func (x *Property) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *Property) GetMinItems() int32 {
	if x != nil {
		return x.MinItems
	}
	return 0
}

func (x *Property) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

type DeploymentLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputName string `protobuf:"bytes,1,opt,name=output_name,json=outputName,proto3" json:"output_name,omitempty"`
	// Used for backwards compatibility of old deployments after an output name
	// is changed.
	AlternateNames []string `protobuf:"bytes,4,rep,name=alternate_names,json=alternateNames,proto3" json:"alternate_names,omitempty"`
	// Only one DeploymentLink per DeploymentData may set this to true.
	ShowInNotification bool `protobuf:"varint,2,opt,name=show_in_notification,json=showInNotification,proto3" json:"show_in_notification,omitempty"`
	OpenInNewTab       bool `protobuf:"varint,3,opt,name=open_in_new_tab,json=openInNewTab,proto3" json:"open_in_new_tab,omitempty"`
}

func (x *DeploymentLink) Reset() {
	*x = DeploymentLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentLink) ProtoMessage() {}

func (x *DeploymentLink) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentLink.ProtoReflect.Descriptor instead.
func (*DeploymentLink) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{5}
}

func (x *DeploymentLink) GetOutputName() string {
	if x != nil {
		return x.OutputName
	}
	return ""
}

func (x *DeploymentLink) GetAlternateNames() []string {
	if x != nil {
		return x.AlternateNames
	}
	return nil
}

func (x *DeploymentLink) GetShowInNotification() bool {
	if x != nil {
		return x.ShowInNotification
	}
	return false
}

func (x *DeploymentLink) GetOpenInNewTab() bool {
	if x != nil {
		return x.OpenInNewTab
	}
	return false
}

type OrgPolicyCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required for listPolicy types.
	RequiredValues []string `protobuf:"bytes,2,rep,name=required_values,json=requiredValues,proto3" json:"required_values,omitempty"`
}

func (x *OrgPolicyCheck) Reset() {
	*x = OrgPolicyCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgPolicyCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgPolicyCheck) ProtoMessage() {}

func (x *OrgPolicyCheck) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgPolicyCheck.ProtoReflect.Descriptor instead.
func (*OrgPolicyCheck) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{6}
}

func (x *OrgPolicyCheck) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgPolicyCheck) GetRequiredValues() []string {
	if x != nil {
		return x.RequiredValues
	}
	return nil
}

type CloudProductIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsoleProductIdentifier *ConsoleProductIdentifier `protobuf:"bytes,1,opt,name=console_product_identifier,json=consoleProductIdentifier,proto3" json:"console_product_identifier,omitempty"`
	Label                    string                    `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *CloudProductIdentifier) Reset() {
	*x = CloudProductIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudProductIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudProductIdentifier) ProtoMessage() {}

func (x *CloudProductIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudProductIdentifier.ProtoReflect.Descriptor instead.
func (*CloudProductIdentifier) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{7}
}

func (x *CloudProductIdentifier) GetConsoleProductIdentifier() *ConsoleProductIdentifier {
	if x != nil {
		return x.ConsoleProductIdentifier
	}
	return nil
}

func (x *CloudProductIdentifier) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type ConsoleProductIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionId                   string `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	PageId                      string `protobuf:"bytes,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
	PageIdForPostDeploymentLink string `protobuf:"bytes,3,opt,name=page_id_for_post_deployment_link,json=pageIdForPostDeploymentLink,proto3" json:"page_id_for_post_deployment_link,omitempty"`
}

func (x *ConsoleProductIdentifier) Reset() {
	*x = ConsoleProductIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsoleProductIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleProductIdentifier) ProtoMessage() {}

func (x *ConsoleProductIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsoleProductIdentifier.ProtoReflect.Descriptor instead.
func (*ConsoleProductIdentifier) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{8}
}

func (x *ConsoleProductIdentifier) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *ConsoleProductIdentifier) GetPageId() string {
	if x != nil {
		return x.PageId
	}
	return ""
}

func (x *ConsoleProductIdentifier) GetPageIdForPostDeploymentLink() string {
	if x != nil {
		return x.PageIdForPostDeploymentLink
	}
	return ""
}

type DeployData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Solution-specific form inputs.
	InputSections []*Section `protobuf:"bytes,6,rep,name=input_sections,json=inputSections,proto3" json:"input_sections,omitempty"`
	// Links to show in the deployments table.
	Links []*DeploymentLink `protobuf:"bytes,3,rep,name=links,proto3" json:"links,omitempty"`
	// IAM roles required by the service account deploying the solution, in the
	// form of "roles/compute.admin".
	Roles []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	// APIs required by the service account deploying the solution in the form
	// "compute.googleapis.com".
	Apis []string `protobuf:"bytes,1,rep,name=apis,proto3" json:"apis,omitempty"`
	// If true, this solution should not have multiple concurrent deployments in
	// the same project.
	IsSingleton     bool                              `protobuf:"varint,5,opt,name=is_singleton,json=isSingleton,proto3" json:"is_singleton,omitempty"`
	OrgPolicyChecks []*OrgPolicyCheck                 `protobuf:"bytes,8,rep,name=org_policy_checks,json=orgPolicyChecks,proto3" json:"org_policy_checks,omitempty"`
	LocationConfigs []DeployData_DeployLocationConfig `protobuf:"varint,4,rep,packed,name=location_configs,json=locationConfigs,proto3,enum=DeployData_DeployLocationConfig" json:"location_configs,omitempty"`
}

func (x *DeployData) Reset() {
	*x = DeployData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployData) ProtoMessage() {}

func (x *DeployData) ProtoReflect() protoreflect.Message {
	mi := &file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployData.ProtoReflect.Descriptor instead.
func (*DeployData) Descriptor() ([]byte, []int) {
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP(), []int{9}
}

func (x *DeployData) GetInputSections() []*Section {
	if x != nil {
		return x.InputSections
	}
	return nil
}

func (x *DeployData) GetLinks() []*DeploymentLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *DeployData) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *DeployData) GetApis() []string {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *DeployData) GetIsSingleton() bool {
	if x != nil {
		return x.IsSingleton
	}
	return false
}

func (x *DeployData) GetOrgPolicyChecks() []*OrgPolicyCheck {
	if x != nil {
		return x.OrgPolicyChecks
	}
	return nil
}

func (x *DeployData) GetLocationConfigs() []DeployData_DeployLocationConfig {
	if x != nil {
		return x.LocationConfigs
	}
	return nil
}

var File_bpconsume_jumpstartsolutions_protos_solution_proto protoreflect.FileDescriptor

var file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDesc = []byte{
	0x0a, 0x32, 0x62, 0x70, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x6a, 0x75, 0x6d, 0x70,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x03, 0x0a, 0x08, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x0a, 0x67, 0x69, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x47, 0x69, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x09, 0x67, 0x69, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x13,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x12,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x73, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x12,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x6f, 0x73, 0x74, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x6f, 0x73, 0x74, 0x45, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x55, 0x73, 0x64, 0x12, 0x53, 0x0a, 0x19, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x17, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x0b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x09, 0x47, 0x69,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x78, 0x0a, 0x12, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xd0, 0x03, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x43, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f,
	0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x52, 0x41, 0x59,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x04, 0x22, 0xb3,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x49,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x61, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x4e, 0x65,
	0x77, 0x54, 0x61, 0x62, 0x22, 0x49, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x16, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x1a, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x45,
	0x0a, 0x20, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x46, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x99, 0x04, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x11, 0x6f, 0x72, 0x67,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4f, 0x72, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x42, 0x49, 0x47, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x45,
	0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x49, 0x47, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x56, 0x32, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c,
	0x4f, 0x55, 0x44, 0x5f, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10,
	0x06, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x07,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x10, 0x08, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x43, 0x4f, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x49, 0x10,
	0x09, 0x42, 0x65, 0x5a, 0x63, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x74, 0x6f, 0x6f, 0x6c, 0x6b, 0x69, 0x74, 0x2f, 0x63, 0x6c, 0x69,
	0x2f, 0x62, 0x70, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x6a, 0x75, 0x6d, 0x70, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescOnce sync.Once
	file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescData = file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDesc
)

func file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescGZIP() []byte {
	file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescOnce.Do(func() {
		file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescData = protoimpl.X.CompressGZIP(file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescData)
	})
	return file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDescData
}

var file_bpconsume_jumpstartsolutions_protos_solution_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_bpconsume_jumpstartsolutions_protos_solution_proto_goTypes = []interface{}{
	(Property_Type)(0),                   // 0: Property.Type
	(DeployData_DeployLocationConfig)(0), // 1: DeployData.DeployLocationConfig
	(*Solution)(nil),                     // 2: Solution
	(*GitSource)(nil),                    // 3: GitSource
	(*DeploymentEstimate)(nil),           // 4: DeploymentEstimate
	(*Section)(nil),                      // 5: Section
	(*Property)(nil),                     // 6: Property
	(*DeploymentLink)(nil),               // 7: DeploymentLink
	(*OrgPolicyCheck)(nil),               // 8: OrgPolicyCheck
	(*CloudProductIdentifier)(nil),       // 9: CloudProductIdentifier
	(*ConsoleProductIdentifier)(nil),     // 10: ConsoleProductIdentifier
	(*DeployData)(nil),                   // 11: DeployData
}
var file_bpconsume_jumpstartsolutions_protos_solution_proto_depIdxs = []int32{
	3,  // 0: Solution.git_source:type_name -> GitSource
	4,  // 1: Solution.deployment_estimate:type_name -> DeploymentEstimate
	9,  // 2: Solution.cloud_product_identifiers:type_name -> CloudProductIdentifier
	11, // 3: Solution.deploy_data:type_name -> DeployData
	6,  // 4: Section.properties:type_name -> Property
	0,  // 5: Property.type:type_name -> Property.Type
	10, // 6: CloudProductIdentifier.console_product_identifier:type_name -> ConsoleProductIdentifier
	5,  // 7: DeployData.input_sections:type_name -> Section
	7,  // 8: DeployData.links:type_name -> DeploymentLink
	8,  // 9: DeployData.org_policy_checks:type_name -> OrgPolicyCheck
	1,  // 10: DeployData.location_configs:type_name -> DeployData.DeployLocationConfig
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_bpconsume_jumpstartsolutions_protos_solution_proto_init() }
func file_bpconsume_jumpstartsolutions_protos_solution_proto_init() {
	if File_bpconsume_jumpstartsolutions_protos_solution_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Solution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentEstimate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgPolicyCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudProductIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsoleProductIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bpconsume_jumpstartsolutions_protos_solution_proto_goTypes,
		DependencyIndexes: file_bpconsume_jumpstartsolutions_protos_solution_proto_depIdxs,
		EnumInfos:         file_bpconsume_jumpstartsolutions_protos_solution_proto_enumTypes,
		MessageInfos:      file_bpconsume_jumpstartsolutions_protos_solution_proto_msgTypes,
	}.Build()
	File_bpconsume_jumpstartsolutions_protos_solution_proto = out.File
	file_bpconsume_jumpstartsolutions_protos_solution_proto_rawDesc = nil
	file_bpconsume_jumpstartsolutions_protos_solution_proto_goTypes = nil
	file_bpconsume_jumpstartsolutions_protos_solution_proto_depIdxs = nil
}
